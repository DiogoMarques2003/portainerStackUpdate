name: Build and Release executables

on:
  push:
    branches:
      - main

jobs:
  build_windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build Windows executable
        id: build
        run: |
          pyinstaller --onefile --add-data "src/resources;resources" src/main.py
          echo "exe_path=dist/main.exe" >> $env:GITHUB_OUTPUT

      - name: Upload Windows executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: main-windows-exe
          path: dist/main.exe

  build_linux:
    runs-on: ubuntu-latest
    needs: build_windows

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build Linux executable
        id: build
        run: |
          pyinstaller --onefile --add-data "src/resources:resources" src/main.py
          echo "exe_path=dist/main" >> $GITHUB_OUTPUT

      - name: Upload Linux executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: main-linux-exe
          path: dist/main

  release:
    needs: [build_windows, build_linux]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download Windows executable
        uses: actions/download-artifact@v4
        with:
          name: main-windows-exe
          path: .

      - name: Download Linux executable
        uses: actions/download-artifact@v4
        with:
          name: main-linux-exe
          path: .

      - name: Create version tag
        id: get_tag
        run: echo "tag=v$(date +'%Y.%m.%d.%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Upload Windows executable to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.exe
          asset_name: main-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux executable to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main
          asset_name: main-linux
          asset_content_type: application/octet-stream
